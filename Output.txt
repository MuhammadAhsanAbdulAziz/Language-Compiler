(ACCESS_MODIFIERS, "public" ,1)
(KEYWORDS, "class" ,1)
(IDENTIFIER, "Test" ,1)
(TERMINATORS, "(" ,1)
(IDENTIFIER, "abc" ,1)
(TERMINATORS, ")" ,1)
(TERMINATORS, "{" ,1)
(ACCESS_MODIFIERS, "public" ,3)
(IDENTIFIER, "Test" ,3)
(TERMINATORS, "(" ,3)
(KEYWORDS, "var" ,3)
(IDENTIFIER, "abc" ,3)
(TERMINATORS, ":" ,3)
(DT, "Number" ,3)
(Invalid Lexene, "," ,3)
(KEYWORDS, "var" ,3)
(IDENTIFIER, "abc" ,3)
(TERMINATORS, ":" ,3)
(DT, "Word" ,3)
(TERMINATORS, ")" ,3)
(TERMINATORS, "{" ,3)
(KEYWORDS, "this" ,4)
(TERMINATORS, "." ,4)
(IDENTIFIER, "abc" ,4)
(ASSIGN_OPERATORS, "=" ,4)
(IDENTIFIER, "abc" ,4)
(TERMINATORS, "(" ,4)
(TERMINATORS, ")" ,4)
(TERMINATORS, "[" ,4)
(Number, "2" ,4)
(TERMINATORS, "]" ,4)
(TERMINATORS, ";" ,4)
(TERMINATORS, "}" ,5)
(ACCESS_MODIFIERS, "public" ,7)
(TERMINATORS, "~" ,7)
(IDENTIFIER, "Test" ,7)
(TERMINATORS, "(" ,7)
(TERMINATORS, ")" ,7)
(TERMINATORS, ";" ,7)
(ACCESS_MODIFIERS, "public" ,9)
(KEYWORDS, "var" ,9)
(IDENTIFIER, "abc" ,9)
(TERMINATORS, ":" ,9)
(DT, "Number" ,9)
(TERMINATORS, ";" ,9)
(ACCESS_MODIFIERS, "public" ,13)
(KEYWORDS, "void" ,13)
(IDENTIFIER, "sampleFunction" ,13)
(TERMINATORS, "=>" ,13)
(TERMINATORS, "(" ,13)
(KEYWORDS, "var" ,13)
(IDENTIFIER, "a" ,13)
(TERMINATORS, ":" ,13)
(DT, "Number" ,13)
(TERMINATORS, ")" ,13)
(TERMINATORS, "{" ,13)
(KEYWORDS, "var" ,14)
(IDENTIFIER, "a" ,14)
(TERMINATORS, ":" ,14)
(DT, "Number" ,14)
(TERMINATORS, "[" ,14)
(Number, "2" ,14)
(TERMINATORS, "]" ,14)
(TERMINATORS, "[" ,14)
(Number, "2" ,14)
(TERMINATORS, "]" ,14)
(TERMINATORS, "{" ,14)
(Number, "2" ,14)
(Invalid Lexene, "," ,14)
(Number, "3" ,14)
(TERMINATORS, "}" ,14)
(TERMINATORS, "{" ,14)
(Word, "amir" ,14)
(Invalid Lexene, "," ,14)
(Word, "chota" ,14)
(TERMINATORS, "}" ,14)
(TERMINATORS, ";" ,14)
(TERMINATORS, "}" ,15)
(TERMINATORS, "}" ,16)
(KEYWORDS, "abstract" ,18)
(ACCESS_MODIFIERS, "private" ,18)
(KEYWORDS, "class" ,18)
(IDENTIFIER, "Test" ,18)
(TERMINATORS, "(" ,18)
(IDENTIFIER, "abc" ,18)
(TERMINATORS, ")" ,18)
(TERMINATORS, "{" ,18)
(ACCESS_MODIFIERS, "public" ,20)
(IDENTIFIER, "Test" ,20)
(TERMINATORS, "(" ,20)
(KEYWORDS, "var" ,20)
(IDENTIFIER, "abc" ,20)
(TERMINATORS, ":" ,20)
(DT, "Number" ,20)
(Invalid Lexene, "," ,20)
(KEYWORDS, "var" ,20)
(IDENTIFIER, "abc" ,20)
(TERMINATORS, ":" ,20)
(DT, "Word" ,20)
(TERMINATORS, ")" ,20)
(TERMINATORS, ";" ,20)
(ACCESS_MODIFIERS, "public" ,22)
(TERMINATORS, "~" ,22)
(IDENTIFIER, "Test" ,22)
(TERMINATORS, "(" ,22)
(TERMINATORS, ")" ,22)
(TERMINATORS, ";" ,22)
(ACCESS_MODIFIERS, "public" ,24)
(KEYWORDS, "var" ,24)
(IDENTIFIER, "abc" ,24)
(TERMINATORS, ":" ,24)
(DT, "Number" ,24)
(TERMINATORS, ";" ,24)
(ACCESS_MODIFIERS, "public" ,28)
(KEYWORDS, "void" ,28)
(IDENTIFIER, "sampleFunction" ,28)
(TERMINATORS, "=>" ,28)
(TERMINATORS, "(" ,28)
(KEYWORDS, "var" ,28)
(IDENTIFIER, "a" ,28)
(TERMINATORS, ":" ,28)
(DT, "Number" ,28)
(TERMINATORS, ")" ,28)
(TERMINATORS, "{" ,28)
(KEYWORDS, "var" ,29)
(IDENTIFIER, "a" ,29)
(TERMINATORS, ":" ,29)
(DT, "Number" ,29)
(TERMINATORS, "[" ,29)
(Number, "2" ,29)
(TERMINATORS, "]" ,29)
(TERMINATORS, "[" ,29)
(Number, "2" ,29)
(TERMINATORS, "]" ,29)
(TERMINATORS, "{" ,29)
(Number, "2" ,29)
(Invalid Lexene, "," ,29)
(Number, "3" ,29)
(TERMINATORS, "}" ,29)
(TERMINATORS, "{" ,29)
(Word, "amir" ,29)
(Invalid Lexene, "," ,29)
(Word, "chota" ,29)
(TERMINATORS, "}" ,29)
(TERMINATORS, ";" ,29)
(TERMINATORS, "}" ,30)
(TERMINATORS, "}" ,31)
(ACCESS_MODIFIERS, "public" ,33)
(KEYWORDS, "class" ,33)
(IDENTIFIER, "Program" ,33)
(TERMINATORS, "{" ,34)
(KEYWORDS, "void" ,35)
(IDENTIFIER, "sampleFunction" ,35)
(TERMINATORS, "=>" ,35)
(TERMINATORS, "(" ,35)
(KEYWORDS, "var" ,35)
(IDENTIFIER, "a" ,35)
(TERMINATORS, ":" ,35)
(DT, "Number" ,35)
(TERMINATORS, ")" ,35)
(TERMINATORS, "{" ,35)
(TERMINATORS, "}" ,37)
(KEYWORDS, "void" ,39)
(IDENTIFIER, "sampleFunction" ,39)
(TERMINATORS, "=>" ,39)
(TERMINATORS, "(" ,39)
(KEYWORDS, "var" ,39)
(IDENTIFIER, "a" ,39)
(TERMINATORS, ":" ,39)
(DT, "Number" ,39)
(Invalid Lexene, "," ,39)
(KEYWORDS, "var" ,39)
(IDENTIFIER, "a" ,39)
(TERMINATORS, ":" ,39)
(DT, "Word" ,39)
(TERMINATORS, ")" ,39)
(TERMINATORS, "{" ,39)
(TERMINATORS, "}" ,41)
(DT, "Number" ,43)
(IDENTIFIER, "sampleFunction" ,43)
(TERMINATORS, "=>" ,43)
(TERMINATORS, "(" ,43)
(TERMINATORS, ")" ,43)
(TERMINATORS, "{" ,43)
(TERMINATORS, "}" ,45)
(KEYWORDS, "main" ,47)
(TERMINATORS, "=>" ,47)
(TERMINATORS, "(" ,47)
(TERMINATORS, ")" ,47)
(TERMINATORS, "{" ,48)
(KEYWORDS, "var" ,49)
(IDENTIFIER, "a" ,49)
(TERMINATORS, ":" ,49)
(DT, "Number" ,49)
(RELATIONAL_OPERATORS, "<" ,49)
(DT, "Stack" ,49)
(RELATIONAL_OPERATORS, ">" ,49)
(TERMINATORS, ";" ,49)
(KEYWORDS, "var" ,51)
(IDENTIFIER, "a" ,51)
(TERMINATORS, ":" ,51)
(DT, "Number" ,51)
(TERMINATORS, "[" ,51)
(Number, "2" ,51)
(TERMINATORS, "]" ,51)
(TERMINATORS, "[" ,51)
(Number, "2" ,51)
(TERMINATORS, "]" ,51)
(TERMINATORS, "{" ,51)
(Number, "2" ,51)
(Invalid Lexene, "," ,51)
(Number, "3" ,51)
(TERMINATORS, "}" ,51)
(TERMINATORS, "{" ,51)
(Word, "amir" ,51)
(Invalid Lexene, "," ,51)
(Word, "chota" ,51)
(TERMINATORS, "}" ,51)
(TERMINATORS, ";" ,51)
(IDENTIFIER, "a" ,53)
(INC_DEC, "++" ,53)
(TERMINATORS, ";" ,53)
(IDENTIFIER, "ABC" ,55)
(IDENTIFIER, "abc" ,55)
(TERMINATORS, "(" ,55)
(IDENTIFIER, "abc" ,55)
(Invalid Lexene, "," ,55)
(Word, "ahsan" ,55)
(Invalid Lexene, "," ,55)
(Number, "1" ,55)
(TERMINATORS, ")" ,55)
(TERMINATORS, ";" ,55)
(KEYWORDS, "if" ,57)
(TERMINATORS, "(" ,57)
(IDENTIFIER, "num" ,57)
(ARITHMATIC_OPERATORS, "%" ,57)
(Number, "2" ,57)
(RELATIONAL_OPERATORS, "==" ,57)
(Number, "0" ,57)
(TERMINATORS, ")" ,57)
(TERMINATORS, "{" ,57)
(IDENTIFIER, "a" ,58)
(ASSIGN_OPERATORS, "=" ,58)
(Word, "ahsan" ,58)
(TERMINATORS, ";" ,58)
(TERMINATORS, "}" ,59)
(KEYWORDS, "if_not" ,60)
(TERMINATORS, "(" ,60)
(IDENTIFIER, "zain" ,60)
(TERMINATORS, ")" ,60)
(TERMINATORS, "{" ,60)
(IDENTIFIER, "hello" ,61)
(ASSIGN_OPERATORS, "=" ,61)
(KEYWORDS, "true" ,61)
(TERMINATORS, ";" ,61)
(TERMINATORS, "}" ,62)
(KEYWORDS, "do_this" ,63)
(TERMINATORS, "{" ,63)
(KEYWORDS, "var" ,64)
(IDENTIFIER, "a" ,64)
(TERMINATORS, ":" ,64)
(DT, "Number" ,64)
(ASSIGN_OPERATORS, "=" ,64)
(Word, "Ahsan" ,64)
(TERMINATORS, ";" ,64)
(TERMINATORS, "}" ,65)
(KEYWORDS, "looping_till" ,67)
(TERMINATORS, "(" ,67)
(IDENTIFIER, "i" ,67)
(RELATIONAL_OPERATORS, "<" ,67)
(Number, "10" ,67)
(TERMINATORS, ")" ,67)
(TERMINATORS, "{" ,67)
(KEYWORDS, "var" ,68)
(IDENTIFIER, "a" ,68)
(TERMINATORS, ":" ,68)
(DT, "Number" ,68)
(ASSIGN_OPERATORS, "=" ,68)
(IDENTIFIER, "a" ,68)
(ARITHMATIC_OPERATORS, "+" ,68)
(IDENTIFIER, "b" ,68)
(ARITHMATIC_OPERATORS, "*" ,68)
(Number, "2." ,68)
(TERMINATORS, ";" ,68)
(IDENTIFIER, "a" ,69)
(ASSIGN_OPERATORS, "=" ,69)
(Number, "2" ,69)
(ARITHMATIC_OPERATORS, "+" ,69)
(Number, "3" ,69)
(ARITHMATIC_OPERATORS, "*" ,69)
(IDENTIFIER, "b" ,69)
(TERMINATORS, "[" ,69)
(Number, "3" ,69)
(TERMINATORS, "]" ,69)
(ARITHMATIC_OPERATORS, "%" ,69)
(Number, "2" ,69)
(TERMINATORS, ";" ,69)
(TERMINATORS, "}" ,70)
(TERMINATORS, "}" ,71)
(DT, "Number" ,73)
(IDENTIFIER, "sampleFunction" ,73)
(TERMINATORS, "=>" ,73)
(TERMINATORS, "(" ,73)
(TERMINATORS, ")" ,73)
(TERMINATORS, "{" ,73)
(TERMINATORS, "}" ,75)
(KEYWORDS, "void" ,77)
(IDENTIFIER, "sampleFunction" ,77)
(TERMINATORS, "=>" ,77)
(TERMINATORS, "(" ,77)
(KEYWORDS, "var" ,77)
(IDENTIFIER, "a" ,77)
(TERMINATORS, ":" ,77)
(DT, "Number" ,77)
(Invalid Lexene, "," ,77)
(KEYWORDS, "var" ,77)
(IDENTIFIER, "a" ,77)
(TERMINATORS, ":" ,77)
(DT, "Word" ,77)
(TERMINATORS, ")" ,77)
(TERMINATORS, "{" ,77)
(TERMINATORS, "}" ,79)
(TERMINATORS, "}" ,80)
(KEYWORDS, "sealed" ,82)
(ACCESS_MODIFIERS, "public" ,82)
(KEYWORDS, "class" ,82)
(IDENTIFIER, "Test" ,82)
(TERMINATORS, "(" ,82)
(IDENTIFIER, "abc" ,82)
(TERMINATORS, ")" ,82)
(TERMINATORS, "{" ,82)
(ACCESS_MODIFIERS, "public" ,84)
(IDENTIFIER, "Test" ,84)
(TERMINATORS, "(" ,84)
(KEYWORDS, "var" ,84)
(IDENTIFIER, "abc" ,84)
(TERMINATORS, ":" ,84)
(DT, "Number" ,84)
(Invalid Lexene, "," ,84)
(KEYWORDS, "var" ,84)
(IDENTIFIER, "abc" ,84)
(TERMINATORS, ":" ,84)
(DT, "Word" ,84)
(TERMINATORS, ")" ,84)
(TERMINATORS, ";" ,84)
(ACCESS_MODIFIERS, "public" ,86)
(TERMINATORS, "~" ,86)
(IDENTIFIER, "Test" ,86)
(TERMINATORS, "(" ,86)
(TERMINATORS, ")" ,86)
(TERMINATORS, ";" ,86)
(ACCESS_MODIFIERS, "public" ,88)
(KEYWORDS, "var" ,88)
(IDENTIFIER, "abc" ,88)
(TERMINATORS, ":" ,88)
(DT, "Number" ,88)
(TERMINATORS, ";" ,88)
(ACCESS_MODIFIERS, "public" ,92)
(KEYWORDS, "void" ,92)
(IDENTIFIER, "sampleFunction" ,92)
(TERMINATORS, "=>" ,92)
(TERMINATORS, "(" ,92)
(KEYWORDS, "var" ,92)
(IDENTIFIER, "a" ,92)
(TERMINATORS, ":" ,92)
(DT, "Number" ,92)
(TERMINATORS, ")" ,92)
(TERMINATORS, "{" ,92)
(KEYWORDS, "var" ,93)
(IDENTIFIER, "a" ,93)
(TERMINATORS, ":" ,93)
(DT, "Number" ,93)
(TERMINATORS, "[" ,93)
(Number, "2" ,93)
(TERMINATORS, "]" ,93)
(TERMINATORS, "[" ,93)
(Number, "2" ,93)
(TERMINATORS, "]" ,93)
(TERMINATORS, "{" ,93)
(Number, "2" ,93)
(Invalid Lexene, "," ,93)
(Number, "3" ,93)
(TERMINATORS, "}" ,93)
(TERMINATORS, "{" ,93)
(Word, "amir" ,93)
(Invalid Lexene, "," ,93)
(Word, "chota" ,93)
(TERMINATORS, "}" ,93)
(TERMINATORS, ";" ,93)
(TERMINATORS, "}" ,94)
(TERMINATORS, "}" ,95)
(DT, "Number" ,97)
(IDENTIFIER, "sampleFunction" ,97)
(TERMINATORS, "=>" ,97)
(TERMINATORS, "(" ,97)
(TERMINATORS, ")" ,97)
(TERMINATORS, "{" ,97)
(TERMINATORS, "}" ,99)
(END MARKER, "#" ,100)
