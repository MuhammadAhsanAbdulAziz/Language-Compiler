(ACCESS_MODIFIERS, "public" ,1)
(KEYWORDS, "class" ,1)
(IDENTIFIER, "abc" ,1)
(TERMINATORS, "{" ,1)
(ACCESS_MODIFIERS, "public" ,3)
(KEYWORDS, "void" ,3)
(IDENTIFIER, "sampleFunction" ,3)
(TERMINATORS, "=>" ,3)
(TERMINATORS, "(" ,3)
(KEYWORDS, "var" ,3)
(IDENTIFIER, "aa" ,3)
(TERMINATORS, ":" ,3)
(DT, "Number" ,3)
(TERMINATORS, ")" ,3)
(TERMINATORS, "{" ,3)
(KEYWORDS, "var" ,4)
(IDENTIFIER, "a" ,4)
(TERMINATORS, ":" ,4)
(DT, "Number" ,4)
(TERMINATORS, "[" ,4)
(Number, "2" ,4)
(TERMINATORS, "]" ,4)
(TERMINATORS, "[" ,4)
(Number, "2" ,4)
(TERMINATORS, "]" ,4)
(TERMINATORS, "{" ,4)
(Number, "2" ,4)
(Invalid Lexene, "," ,4)
(Number, "3" ,4)
(TERMINATORS, "}" ,4)
(TERMINATORS, "{" ,4)
(Word, "amir" ,4)
(Invalid Lexene, "," ,4)
(Word, "chota" ,4)
(TERMINATORS, "}" ,4)
(TERMINATORS, ";" ,4)
(TERMINATORS, "}" ,5)
(TERMINATORS, "}" ,6)
(ACCESS_MODIFIERS, "public" ,7)
(KEYWORDS, "class" ,7)
(KEYWORDS, "Main" ,7)
(TERMINATORS, "{" ,8)
(KEYWORDS, "main" ,9)
(TERMINATORS, "=>" ,9)
(TERMINATORS, "(" ,9)
(TERMINATORS, ")" ,9)
(TERMINATORS, "{" ,10)
(KEYWORDS, "var" ,11)
(IDENTIFIER, "a" ,11)
(TERMINATORS, ":" ,11)
(DT, "Number" ,11)
(RELATIONAL_OPERATORS, "<" ,11)
(DT, "Stack" ,11)
(RELATIONAL_OPERATORS, ">" ,11)
(TERMINATORS, ";" ,11)
(KEYWORDS, "var" ,13)
(IDENTIFIER, "a" ,13)
(TERMINATORS, ":" ,13)
(DT, "Number" ,13)
(TERMINATORS, "[" ,13)
(Number, "2" ,13)
(TERMINATORS, "]" ,13)
(TERMINATORS, "[" ,13)
(Number, "2" ,13)
(TERMINATORS, "]" ,13)
(TERMINATORS, "{" ,13)
(Number, "2" ,13)
(Invalid Lexene, "," ,13)
(Number, "3" ,13)
(TERMINATORS, "}" ,13)
(TERMINATORS, "{" ,13)
(Word, "amir" ,13)
(Invalid Lexene, "," ,13)
(Word, "chota" ,13)
(TERMINATORS, "}" ,13)
(TERMINATORS, ";" ,13)
(IDENTIFIER, "a" ,15)
(INC_DEC, "++" ,15)
(TERMINATORS, ";" ,15)
(IDENTIFIER, "ABC" ,17)
(IDENTIFIER, "abc" ,17)
(TERMINATORS, "(" ,17)
(IDENTIFIER, "abc" ,17)
(Invalid Lexene, "," ,17)
(Word, "ahsan" ,17)
(Invalid Lexene, "," ,17)
(Number, "1" ,17)
(TERMINATORS, ")" ,17)
(TERMINATORS, ";" ,17)
(KEYWORDS, "if" ,19)
(TERMINATORS, "(" ,19)
(IDENTIFIER, "num" ,19)
(ARITHMATIC_OPERATORS, "%" ,19)
(Number, "2" ,19)
(RELATIONAL_OPERATORS, "==" ,19)
(Number, "0" ,19)
(TERMINATORS, ")" ,19)
(TERMINATORS, "{" ,19)
(IDENTIFIER, "a" ,20)
(ASSIGN_OPERATORS, "=" ,20)
(Word, "ahsan" ,20)
(TERMINATORS, ";" ,20)
(TERMINATORS, "}" ,21)
(KEYWORDS, "if_not" ,22)
(TERMINATORS, "(" ,22)
(IDENTIFIER, "zain" ,22)
(TERMINATORS, ")" ,22)
(TERMINATORS, "{" ,22)
(IDENTIFIER, "hello" ,23)
(ASSIGN_OPERATORS, "=" ,23)
(KEYWORDS, "true" ,23)
(TERMINATORS, ";" ,23)
(TERMINATORS, "}" ,24)
(KEYWORDS, "do_this" ,25)
(TERMINATORS, "{" ,25)
(KEYWORDS, "var" ,26)
(IDENTIFIER, "a" ,26)
(TERMINATORS, ":" ,26)
(DT, "Number" ,26)
(ASSIGN_OPERATORS, "=" ,26)
(Word, "Ahsan" ,26)
(TERMINATORS, ";" ,26)
(TERMINATORS, "}" ,27)
(KEYWORDS, "looping_till" ,29)
(TERMINATORS, "(" ,29)
(IDENTIFIER, "i" ,29)
(RELATIONAL_OPERATORS, "<" ,29)
(Number, "10" ,29)
(TERMINATORS, ")" ,29)
(TERMINATORS, "{" ,29)
(KEYWORDS, "var" ,30)
(IDENTIFIER, "a" ,30)
(TERMINATORS, ":" ,30)
(DT, "Number" ,30)
(ASSIGN_OPERATORS, "=" ,30)
(IDENTIFIER, "a" ,30)
(ARITHMATIC_OPERATORS, "+" ,30)
(IDENTIFIER, "b" ,30)
(ARITHMATIC_OPERATORS, "*" ,30)
(Number, "2.2" ,30)
(TERMINATORS, ";" ,30)
(IDENTIFIER, "a" ,31)
(ASSIGN_OPERATORS, "=" ,31)
(Number, "2" ,31)
(ARITHMATIC_OPERATORS, "+" ,31)
(Number, "3" ,31)
(ARITHMATIC_OPERATORS, "*" ,31)
(IDENTIFIER, "b" ,31)
(TERMINATORS, "[" ,31)
(Number, "3" ,31)
(TERMINATORS, "]" ,31)
(ARITHMATIC_OPERATORS, "%" ,31)
(Number, "2" ,31)
(TERMINATORS, ";" ,31)
(TERMINATORS, "}" ,32)
(TERMINATORS, "}" ,33)
(TERMINATORS, "}" ,34)
(KEYWORDS, "sealed" ,36)
(ACCESS_MODIFIERS, "public" ,36)
(KEYWORDS, "class" ,36)
(IDENTIFIER, "Test3" ,36)
(TERMINATORS, "(" ,36)
(IDENTIFIER, "abc" ,36)
(TERMINATORS, ")" ,36)
(TERMINATORS, "{" ,36)
(ACCESS_MODIFIERS, "public" ,38)
(IDENTIFIER, "Test" ,38)
(TERMINATORS, "(" ,38)
(KEYWORDS, "var" ,38)
(IDENTIFIER, "abc" ,38)
(TERMINATORS, ":" ,38)
(DT, "Number" ,38)
(Invalid Lexene, "," ,38)
(KEYWORDS, "var" ,38)
(IDENTIFIER, "abc" ,38)
(TERMINATORS, ":" ,38)
(DT, "Word" ,38)
(TERMINATORS, ")" ,38)
(TERMINATORS, ";" ,38)
(ACCESS_MODIFIERS, "public" ,40)
(TERMINATORS, "~" ,40)
(IDENTIFIER, "Test" ,40)
(TERMINATORS, "(" ,40)
(TERMINATORS, ")" ,40)
(TERMINATORS, ";" ,40)
(ACCESS_MODIFIERS, "public" ,42)
(KEYWORDS, "var" ,42)
(IDENTIFIER, "abc" ,42)
(TERMINATORS, ":" ,42)
(DT, "Number" ,42)
(TERMINATORS, ";" ,42)
(ACCESS_MODIFIERS, "public" ,46)
(KEYWORDS, "void" ,46)
(IDENTIFIER, "sampleFunction" ,46)
(TERMINATORS, "=>" ,46)
(TERMINATORS, "(" ,46)
(KEYWORDS, "var" ,46)
(IDENTIFIER, "ab" ,46)
(TERMINATORS, ":" ,46)
(DT, "Number" ,46)
(TERMINATORS, ")" ,46)
(TERMINATORS, "{" ,46)
(KEYWORDS, "var" ,47)
(IDENTIFIER, "a" ,47)
(TERMINATORS, ":" ,47)
(DT, "Number" ,47)
(TERMINATORS, "[" ,47)
(Number, "2" ,47)
(TERMINATORS, "]" ,47)
(TERMINATORS, "[" ,47)
(Number, "2" ,47)
(TERMINATORS, "]" ,47)
(TERMINATORS, "{" ,47)
(Number, "2" ,47)
(Invalid Lexene, "," ,47)
(Number, "3" ,47)
(TERMINATORS, "}" ,47)
(TERMINATORS, "{" ,47)
(Word, "amir" ,47)
(Invalid Lexene, "," ,47)
(Word, "chota" ,47)
(TERMINATORS, "}" ,47)
(TERMINATORS, ";" ,47)
(TERMINATORS, "}" ,48)
(TERMINATORS, "}" ,49)
(END MARKER, "#" ,50)
